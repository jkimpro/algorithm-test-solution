//알약
#include <iostream>
#include <cstdio>
#include <memory.h>


using namespace std;

int n;
long long pill[31][31];

long long search(int whole, int k) {
	if (whole == 0) {
		return 1;
	}
	if (whole + k > n) { return 0; }

	else if (pill[whole][k] > 0) {
		return pill[whole][k];
	}
	else {
		pill[whole][k] = search(whole - 1, k) + search(whole, k + 1);
		return pill[whole][k];
	}

}
int main() {
	while (1) {
		scanf("%d", &n);
		if (n == 0) {
			break;
		}
		else {
			for (int i = 0; i < 31; i++) {
				memset(pill[i], 0, sizeof(pill[i]));
			}
			for (int i = 0; i <31; i++) {
				pill[0][i] = 1;
			}

			printf("%lld\n", search(n - 1, 0));
		}
	}
	return 0;
}




/////완전탐색 버전

//알약 (시간 초과본)
#include <iostream>
#include <cstdio>

using namespace std;
int n;
long long half = 0;
long long full = 0;
long long result = 0;

void dfs(int full, int half) {
	if (full == 0 && half == 0) {
		result += 1;
	}
	else if (full == 0) {
		dfs(0, half - 1);
	}
	else {
		dfs(full - 1, half + 1);
		if (half > 0) {
			dfs(full, half-1);
		}
	}
}
int main() {
	
	while (1) {
		scanf("%d", &n);
		if (n == 0) {
			break;
		}
		else {
			full = n;
			half = 0;
			dfs(full, half);
		}
		printf("%d\n", result);
		result = 0;
	}
	
	


	return 0;
}