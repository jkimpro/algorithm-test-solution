//목장 건설하기
//
//1. 일반적인 시뮬레이션
//2. simulation 함수 호출할때 result+1 을 기준으로 시작한다. (다시 계산하는 것을 방지함)
#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <algorithm>

using namespace std;

int arr[1001][1001];
bool check[1001][1001];

int n,m;
int result = 0;
int simulation(int r, int c){
    if(arr[r][c] !=0){return result;}
    int now = result +1;
    while(1){
        if(r+now >n || c+now>m){ return result;}
        bool out = false;
        for(int i =r ; i<r+now; i++){
            for(int j =c; j<c+now; j++){
                if(arr[i][j] ==1 || arr[i][j] == 2){
                    out = true;
                }
            }
            if(out){
                break;
            }
        }
        if(out){
            return result;
            
        }
        
        result = now;
        now++;
    }
    
}
int main(){
    scanf("%d %d",&n ,&m);
    
    for(int i =0;i<n; i++){
        for(int j =0;j<m;j++){
            scanf("%d", &arr[i][j]);
            check[i][j] = false;
        }
    }
    for(int i =0;i<n; i++){
        for(int j =0;j<m;j++){
            result = simulation(i,j);
        }
    }
    
    printf("%d", result);
    return 0;
}
